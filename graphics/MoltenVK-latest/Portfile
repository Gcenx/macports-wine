# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

github.setup        KhronosGroup MoltenVK 1.2.10 v
github.tarball_from releases
name                ${github.project}-latest
platforms           {darwin any} {macosx any >= 17}
categories          graphics
license             Apache-2
maintainers         {@Gcenx}

description         an implementation of Vulkan for Metal
long_description    ${github.project} is an implementation of the \
                    high-performance, industry-standard Vulkan \
                    graphics and compute API, that runs on Apple's \
                    Metal graphics framework.

conflicts           ${github.project}-1.1.9 ${github.project}-1.0.41

dist_subdir         ${github.project}/${version}
distname            ${github.project}-macos
use_tar             yes

checksums           sha256  ea09ff62f4fdd662d3bf5751bc4e61f064afd9a14e821c3aa431d1ac5a097340 \
                    rmd160  dc586d9e40ee9c9a10d7a035bf232cac1d0a8c8b \
                    size    67131904

# MoltenVK would build for i386, but it uses Metal which only works on
# x86_64 and arm64 (also, Metal was introduced in OS X 10.11)
supported_archs     arm64 x86_64

use_configure       no
build {}

destroot {
    set output_dir ${workpath}/MoltenVK
    set dylib_path ${output_dir}/MoltenVK/dylib/macOS
    set framework_path ${output_dir}/MoltenVK/static

    copy ${dylib_path}/libMoltenVK.dylib ${destroot}${prefix}/lib
    copy ${framework_path}/MoltenVK.xcframework ${destroot}${frameworks_dir}

    # Static library is located inside XCFramework
    ln -s ${frameworks_dir}/MoltenVK.xcframework/macos-arm64_x86_64/libMoltenVK.a \
        ${destroot}${prefix}/lib

    if {![variant_isset universal] || ![variant_exists universal]} {
        system -W ${destroot}${frameworks_dir}/MoltenVK.xcframework/macos-arm64_x86_64 [join [list \
            "lipo -thin ${configure.build_arch}" \
            "libMoltenVK.a -o libMoltenVK.a 2> /dev/null" \
        ]]
        system -W ${destroot}${prefix}/lib [join [list \
            "lipo -thin ${configure.build_arch}" \
            "libMoltenVK.dylib -o libMoltenVK.dylib 2> /dev/null" \
        ]]
    }

    # vulkan and vk_video are provided via vulkan-headers
    copy ${output_dir}/MoltenVK/include/MoltenVK \
        ${destroot}${prefix}/include
}

if {[llength ${supported_archs}] > 1} {
    configure.universal_archs {*}${supported_archs}
    variant universal {}
}
