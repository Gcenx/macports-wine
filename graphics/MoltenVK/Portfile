# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
categories                  graphics
maintainers                 openmaintainer
license                     Apache-2

supported_archs             x86_64
platforms                   darwin
description                 an implementation of Vulkan for Metal
name                        MoltenVK
conflicts                   VulkanSDK
set my_name                 MoltenVK

long_description            ${name} is an implementation of the high-performance, \
                            industry-standard Vulkan graphics and compute API, that \
                            runs on Apple's Metal graphics framework.

# MoltenVK version from https://github.com/KhronosGroup/MoltenVK/releases
version                     1.1.0

# This needs to match the LunarG SDK version
set VulkanSDK_version       1.2.154.0

distname                    vulkansdk-macos-${VulkanSDK_version}
use_dmg                     yes

master_sites                https://sdk.lunarg.com/sdk/download/${VulkanSDK_version}/mac/

checksums                   rmd160  18697ec709f055d5dfeccafbfda339a6d7943638 \
                            sha256  6a917523206aeb179e02ad93c1ea94988ec1af6c22cc7715d8e3f209772829f2 \
                            size    290202207

use_configure       no
build {}

subport VulkanSDK {
    name                        VulkanSDK
    conflicts                   MoltenVK
    set my_name                 VulkanSDK
    dist_subdir                 MoltenVK
    version                     ${VulkanSDK_version}
}

destroot {
    if {${subport} eq {VulkanSDK}} {
        set output_dir ${worksrcpath}/macOS
        file delete -force ${destroot}${prefix}/bin
        file copy ${output_dir}/bin ${destroot}${prefix}
        file copy ${output_dir}/Frameworks/vulkan.framework ${destroot}${frameworks_dir}
        file copy ${worksrcpath}/MoltenVK/MoltenVK.xcframework ${destroot}${frameworks_dir}
        file delete -force ${destroot}${prefix}/lib
        file copy ${output_dir}/lib ${destroot}${prefix}
        file delete -force ${destroot}${prefix}/include
        file copy ${output_dir}/include ${destroot}${prefix}
        file delete -force ${destroot}${prefix}/share
        file copy ${output_dir}/share ${destroot}${prefix}
        reinplace "s|../../..|${prefix}|g" ${destroot}${prefix}/share/vulkan/icd.d/MoltenVK_icd.json \
                                           ${destroot}${prefix}/share/vulkan/explicit_layer.d/VkLayer_api_dump.json \
                                           ${destroot}${prefix}/share/vulkan/explicit_layer.d/VkLayer_khronos_validation.json
        reinplace "s|/tmp/macos-sdk-build/SPIRV-Cross/build/install|${prefix}|g" ${destroot}${prefix}/lib/pkgconfig/spirv-cross-c-shared.pc
        reinplace "s|/tmp/macos-sdk-build/Glslang/build/install|${prefix}|g" ${destroot}${prefix}/lib/pkgconfig/SPIRV-Tools-shared.pc
        reinplace "s|/tmp/macos-sdk-build/Glslang/build/install|${prefix}|g" ${destroot}${prefix}/lib/pkgconfig/SPIRV-Tools.pc
    
    } else {
        set output_dir ${worksrcpath}/MoltenVK
        file copy ${output_dir}/dylib/macOS/libMoltenVK.dylib ${destroot}${prefix}/lib
        xinstall -d ${destroot}${prefix}/share/vulkan/icd.d
        file copy ${output_dir}/dylib/macOS/MoltenVK_icd.json ${destroot}${prefix}/share/vulkan/icd.d
        reinplace "s|./|${prefix}|g" ${destroot}${prefix}/share/vulkan/icd.d/MoltenVK_icd.json
        file delete -force ${destroot}${prefix}/include
        file copy ${output_dir}/include ${destroot}${prefix}
        file copy ${output_dir}/MoltenVK.xcframework ${destroot}${frameworks_dir}
    }
}

platform darwin {
    if {${os.major} < 15} {
        archive_sites
        distfiles
        depends_build
        pre-fetch {
            ui_error "${subport} @${version} requires macOS El Capitan or later"
            return -code error "incompatible OS X version"
        }
    }
    
    notes-append "
        ************************************************************
        In order for vulkan loader within applications to find,
        libMoltenVK.dylib we need to copy ${prefix}/share/vulkan
        into each user's
        ~/share directory;
        
        cp -R ${prefix}/share/vulkan ~/.local/share/
        ************************************************************
    "
    
}
