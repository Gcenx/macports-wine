# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   muniversal 1.0
PortGroup                   compiler_blacklist_versions 1.0
PortGroup                   active_variants 1.1
PortGroup                   legacysupport 1.1

# ntdll requires "_fstatat", since wine-5.9
legacysupport.use_static yes
legacysupport.newest_darwin_requires_legacy 13

# Please keep the wine-stable, wine-stable-legacy, wine-devel, wine-staging and wine-crossover ports as similar as possible.

# When updating the version of wine, update wine_gecko and wine_mono to compatible versions
# as referenced in the source code. Check here by replacing X.Y with the version:
# https://source.winehq.org/git/wine.git/blob/refs/tags/wine-X.Y:/dlls/appwiz.cpl/addons.c
# see also http://wiki.winehq.org/Gecko and http://wiki.winehq.org/Mono

name                        wine-stable-legacy
conflicts                   wine wine-stable wine-devel wine-staging wine-crossover
set my_name                 wine
version                     6.0.2
revision                    0
set branch                  [lindex [split ${version} .] 0].0
license                     LGPL-2.1+
categories                  x11

# arm64 compile of wine requires mingw-w64-clang but will only support arm64 Windows binaries
supported_archs             i386 x86_64
maintainers                 {gcenx @gcenx}
homepage                    https://www.winehq.org
platforms                   darwin
distname                    ${my_name}-${version}
dist_subdir                 ${my_name}
set wine_distfile           ${distname}${extract.suffix}
worksrcdir                  wine-${distname}
use_parallel_build          yes

description                 A Windows API implementation

long_description            Wine is a compatibility layer capable of running \
                            Windows applications. \
                            Instead of simulating internal Windows logic like \
                            a virtual machine or emulator, Wine translates \
                            Windows API calls into POSIX calls on-the-fly, \
                            eliminating the performance and memory penalties \
                            of other methods and allowing you to cleanly \
                            integrate Windows applications into your desktop.

# GitHub requires TLS v1.2
if {${os.major} > 15} {
    master_sites                https://github.com/wine-mirror/wine/archive/:winesource
} else {
    depends_fetch-append        port:curl
    depends_skip_archcheck-append curl
    
    fetch {
            # Manually download the file(s) if they don't exist
            if {![file exists ${distpath}/${wine_distfile} ]} {
                system -W /bin "${prefix}/bin/curl -Lo ${distpath}/${wine_distfile} https://github.com/wine-mirror/wine/archive/${wine_distfile}"
            }
    }
}

extract.only                ${wine_distfile}

distfiles                   ${wine_distfile}:winesource

checksums                   ${wine_distfile} \
                            rmd160  0f5f00cd0a71de0c46f7e4140dcd23e45cb2b5f6 \
                            sha256  345dba573ba928e5a65cf35901661a86df2dd6136e81530bc865f177dc66d9b2 \
                            size    40522571

# Note: Most of the X11 libs are dlopen()'d
depends_lib                 port:fontconfig \
                            port:freetype \
                            port:FAudio \
                            port:gnutls \
                            port:gstreamer1 \
                            port:gstreamer1-gst-plugins-base \
                            port:gstreamer1-gst-plugins-good \
                            path:include/turbojpeg.h:libjpeg-turbo \
                            port:lcms2 \
                            port:libiconv \
                            port:libpcap \
                            port:libpng \
                            port:libusb \
                            port:libunwind \
                            port:libxml2 \
                            port:libxslt \
                            port:mpg123 \
                            port:openal-soft \
                            port:tiff \
                            port:wine-gecko

depends_build               port:bison \
                            port:flex \
                            port:mingw-w64 \
                            port:pkgconfig

patch.pre_args              -p1

# https://bugs.winehq.org/show_bug.cgi?id=34166#c103
patchfiles-append           patch-noflicker.diff

configure.checks.implicit_function_declaration.whitelist-append     __clear_cache \
                                                                    fallocate \
                                                                    gethostbyaddr_r \
                                                                    gethostbyname_r \
                                                                    sched_setaffinity

pre-configure {
    if {[variant_exists universal] && [variant_isset universal]} {
        foreach arch ${universal_archs_to_use} {
            file mkdir ${worksrcpath}-${arch}
        }

        configure.cmd ${worksrcpath}/configure
    }
}

# Wine requires the program specified in INSTALL to create intermediate
# directories; /usr/bin/install doesn't.
# http://bugs.winehq.org/show_bug.cgi?id=35310
configure.install           ${worksrcpath}/tools/install-sh

configure.args              --without-alsa \
                            --without-capi \
                            --with-cms \
                            --with-coreaudio \
                            --with-cups \
                            --without-dbus \
                            --with-faudio \
                            --with-fontconfig \
                            --with-freetype \
                            --with-gettext \
                            --without-gettextpo \
                            --without-gphoto \
                            --with-gnutls \
                            --without-gsm \
                            --without-gssapi \
                            --with-gstreamer \
                            --without-hal \
                            --without-inotify \
                            --with-jpeg \
                            --without-krb5 \
                            --with-ldap \
                            --with-mingw \
                            --with-mpg123 \
                            --without-netapi \
                            --with-openal \
                            --with-opencl \
                            --with-opengl \
                            --without-osmesa \
                            --without-oss \
                            --with-pcap \
                            --with-png \
                            --with-pthread \
                            --without-pulse \
                            --without-quicktime \
                            --without-sane \
                            --with-sdl \
                            --with-tiff \
                            --without-udev \
                            --with-unwind \
                            --with-usb \
                            --without-v4l2 \
                            --without-vkd3d \
                            --without-xcomposite \
                            --without-xcursor \
                            --without-xfixes \
                            --without-xinerama \
                            --without-xinput \
                            --without-xinput2 \
                            --with-xml \
                            --without-xrandr \
                            --without-xrender \
                            --without-xshape \
                            --without-xshm \
                            --with-xslt \
                            --without-xxf86vm \
                            --without-x

# Wine has a native macOS driver since 1.5.26 so X11 is optional
variant x11 {
    depends_lib-append          port:libGLU \
                                port:mesa \
                                port:xorg-libX11 \
                                port:xorg-libXcomposite \
                                port:xorg-libXcursor \
                                port:xorg-libXext \
                                port:xorg-libXi \
                                port:xorg-libXinerama \
                                port:xorg-libXrandr \
                                port:xorg-libXxf86vm \
                                port:xorg-libsm \
                                port:xorg-xorgproto \
                                port:xrender

    configure.args-delete       --without-osmesa \
                                --without-xcomposite \
                                --without-xcursor \
                                --without-xfixes \
                                --without-xinerama \
                                --without-xinput \
                                --without-xinput2 \
                                --without-xrandr \
                                --without-xrender \
                                --without-xshape \
                                --without-xxf86vm \
                                --without-x

    configure.args-append       --with-osmesa \
                                --with-xcomposite \
                                --with-xcursor \
                                --with-xfixes \
                                --with-xinerama \
                                --with-xinput \
                                --with-xinput2 \
                                --with-xrandr \
                                --with-xrender \
                                --with-xshape \
                                --with-xxf86vm \
                                --with-x \
                                --x-include=${prefix}/include \
                                --x-lib=${prefix}/lib
}

# Workaround weirdness with i386 GSTREAMER_CFLAGS not always getting set from pkgconfig
configure.args-append           GSTREAMER_CFLAGS="-I${prefix}/include/gstreamer-1.0 -I${prefix}/include/glib-2.0 -I${prefix}/lib/glib-2.0/include -I${prefix}/include/orc-0.4"

# Standard dlopen is used within wine since 5.6, wine(64) no longer finds dylibs
# https://bugs.winehq.org/show_bug.cgi?id=49199
configure.ldflags-append          -Wl,-rpath,${prefix}/lib

configure.universal_args

set merger_build_args(x86_64)     "dlldir=\\\\\${destroot}${prefix}/lib/wine64"
set merger_destroot_args(x86_64)  "dlldir=\\\\\${libdir}/wine64"
set merger_configure_args(x86_64) "--enable-win64 --libdir=${prefix}/lib"
set merger_configure_args(i386)   --with-wine64=${workpath}/${worksrcdir}-x86_64

if {[llength ${supported_archs}] > 1} {
    default_variants +universal
}

if {${universal_possible} && ![variant_isset universal] && ${os.major} <= 18} {
    supported_archs         i386
} elseif {!${universal_possible} && ${os.major} >= 18} {
    macosx_deployment_target    "10.14"
    build.args-append           "dlldir=\\\\\${destroot}${prefix}/lib/wine64"
    destroot.args-append        "dlldir=\\\${destroot}${prefix}/lib/wine64"
    configure.args-append       "--enable-win64 --libdir=${prefix}/lib"
}

# wine requires clang >= 3.8
# FSF GCC cannot compile code using Apple's "blocks" language extensions
compiler.blacklist-append   {*gcc*} {clang < 800} {macports-clang-3.*}
compiler.fallback-append    macports-clang-5.0

platform darwin {
    # On macOS, Core Text is used instead of fontconfig since Wine 1.5.10
    depends_lib-delete                          port:fontconfig
    configure.args-delete                       --with-fontconfig
    configure.args-append                       --without-fontconfig

    # https://trac.macports.org/ticket/64548
    if {${os.major} < 14} {
        depends_lib-delete                          port:openal-soft
        configure.args-delete                       --with-openal
        configure.args-append                       --without-openal

        notes-append "
            \n
            openal-soft support disabled see https://trac.macports.org/ticket/64548
        "
    }

    # Vulkan is supported on macOS through MoltenVK since Wine 3.13, but because
    # it uses Metal it only works on 64-bit
    if {${os.major} >= 15 && ${universal_possible} && [variant_isset universal]} {
        depends_lib-append                      path:lib/libMoltenVK.dylib:MoltenVK
        depends_skip_archcheck-append           MoltenVK \
                                                MoltenVK-CX \
                                                MoltenVK-DXVK \
                                                VulkanSDK
        lappend merger_configure_args(x86_64)   --with-vulkan \
                                                ac_cv_lib_soname_MoltenVK=libMoltenVK.dylib \
                                                ac_cv_lib_soname_vulkan=
        lappend merger_configure_args(i386)     --without-vulkan
    } elseif {${os.major} >= 19} {
        depends_lib-append                      path:lib/libMoltenVK.dylib:MoltenVK
        configure.args-append                   --with-vulkan \
                                                ac_cv_lib_soname_MoltenVK=libMoltenVK.dylib \
                                                ac_cv_lib_soname_vulkan=
    } else {
        configure.args-append                   --without-vulkan
    }

    notes {
        When using the Mac Driver, it might be useful to enable RetinaMode\
        when you're using a high DPI monitor. To do that, open up Wine's\
        Registry Editor:

          wine regedit

        and then navigate to:

          [HKEY_CURRENT_USER\Software\Wine\Mac Driver]

        and then set "RetinaMode" to "y". You may also want to adjust your\
        DPI under the Graphics tab in winecfg.}

    if {${os.major} = 10} {
        # https://trac.macports.org/ticket/61721
        compiler.whitelist          macports-clang-5.0
        depends_build-append        port:libmacho
        configure.ldflags-append    -lmacho
        patchfiles-append           patch-wine-SnowLeopard.diff

        # https://github.com/wine-mirror/wine/commit/a0ab2a7b0c9c28588714372cf1b19a06dd706b26
        # "-no_new_main" is needed for preloader, since wine-4.0-rc1
        require_active_variants     port:ld64 ld64_274

        # https://github.com/wine-mirror/wine/commit/0185ee5d99e8dca2c69d61ba0c0e00256beaf1b5
        # Used to fix a build issue with Xcode 10, since wine-4.0-rc2
        reinplace s|-mmacosx-version-min=10.7|-mmacosx-version-min=10.6|g ${worksrcpath}/configure

        # https://github.com/wine-mirror/wine/commit/eea87600d21adcd910f72f1cdaf698451884f582
        # Features don't exist in IOKit until 10.7, since wine-4.21
        patchfiles-append           0001-Revert-ntdll-Implement-SystemBatteryState-for-Mac-OS.diff

        configure.sdk_version   10.7
        if {${configure.sdkroot} eq ""} {
            pre-fetch {
                error "Building ${name} @${version} on Mac OS X 10.6 requires the MacOSX10.7.sdk to be present in ${developer_dir}/SDKs/"
            }
        }

        notes-append "
            \n
            ${name} @${version} will have issues launching some things as wine-preloader\
            was designed for OS X 10.7 and not OS X 10.6
        "
    }

    if {${os.major} < 10} {
        known_fail yes
        archive_sites
        distfiles
        depends_build
        depends_lib
        pre-fetch {
            ui_error "${name} @${version} requires Mac OS X 10.6 or later."
            return -code error "incompatible Mac OS X version"
        }
    }
}

if {${os.endian} eq "big"} {
    known_fail yes
    archive_sites
    distfiles
    depends_build
    depends_lib
    pre-fetch {
        ui_error "${name} can only be used on an Intel Mac or other computer with a little-endian processor."
        return -code error "incompatible processor"
    }
}

post-destroot {
    # Add custom tool for easy launching explorer
    xinstall ${worksrcpath}/tools/wineapploader.in ${destroot}${prefix}/bin/explorer

    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} \
        ANNOUNCE \
        AUTHORS \
        COPYING.LIB \
        LICENSE \
        README \
        ${destroot}${docdir}
}

if {${universal_possible} && [variant_isset universal]} {
    notes-append "
        \n
        Wine supports both 32-bit and 64-bit now. It is compatible with your\
        existing 32-bit wine prefix, but it will now default to 64-bit when you\
        create a new wine prefix. The architecture can be selected using the\
        WINEARCH environment variable which can be set to either \"win32\" or\
        \"win64\".

        To create a new pure 32-bit prefix, you can run:
            \$ WINEARCH=win32 WINEPREFIX=~/.wine32 winecfg

        See the Wine FAQ for details: https://wiki.winehq.org/FAQ#Wineprefixes
    "
}

livecheck.type              none
