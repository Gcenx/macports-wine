diff --git a/dlls/winemac.drv/window.c b/dlls/winemac.drv/window.c
index b7a0963..4f160ee 100644
--- a/dlls/winemac.drv/window.c
+++ b/dlls/winemac.drv/window.c
@@ -1568,10 +1568,18 @@ static LRESULT CALLBACK desktop_wndproc_wrapper( HWND hwnd, UINT msg, WPARAM wp,
     {
     case WM_WINE_NOTIFY_ACTIVITY:
     {
+#if MAC_OS_X_VERSION_MIN_REQUIRED > 1070
         /* This wakes from display sleep, but doesn't affect the screen saver. */
         static IOPMAssertionID assertion;
         IOPMAssertionDeclareUserActivity(CFSTR("Wine user input"), kIOPMUserActiveLocal, &assertion);
-
+#else
+        /* https://stackoverflow.com/questions/10598809/how-do-i-wake-from-display-sleep-in-osx-10-7-4 */
+        io_registry_entry_t regEntry = IORegistryEntryFromPath(kIOMasterPortDefault, "IOService:/IOResources/IODisplayWrangler");
+        if (regEntry != MACH_PORT_NULL) {
+            IORegistryEntrySetCFProperty(regEntry, CFSTR("IORequestIdle"), kCFBooleanFalse);
+            IOObjectRelease(regEntry);
+        }
+#endif
         /* This prevents the screen saver, but doesn't wake from display sleep. */
         /* It's deprecated, but there's no better alternative. */
 #pragma clang diagnostic push
diff --git a/dlls/winex11.drv/pen.c b/dlls/winex11.drv/pen.c
index 6df2659..9b81492 100644
--- a/dlls/winex11.drv/pen.c
+++ b/dlls/winex11.drv/pen.c
@@ -47,7 +47,7 @@ static DWORD get_user_dashes( char *res, const DWORD *style, DWORD len )
         }
         else dashes[pos++] = dashes[i];
     }
-    for (i = 0; i < pos; i++) res[i] = min( dashes[i], 255 );
+    for (i = 0; i < pos; i++) res[i] = min( dashes[i], (int)255 );
     return pos;
 }
 
diff --git a/dlls/ws2_32/socket.c b/dlls/ws2_32/socket.c
index 27acd85..abe0c64 100644
--- a/dlls/ws2_32/socket.c
+++ b/dlls/ws2_32/socket.c
@@ -464,10 +464,18 @@
     MAP_OPTION( IP_MULTICAST_LOOP ),
     MAP_OPTION( IP_ADD_MEMBERSHIP ),
     MAP_OPTION( IP_DROP_MEMBERSHIP ),
+#ifdef IP_ADD_SOURCE_MEMBERSHIP
     MAP_OPTION( IP_ADD_SOURCE_MEMBERSHIP ),
+#endif
+#ifdef IP_DROP_SOURCE_MEMBERSHIP
     MAP_OPTION( IP_DROP_SOURCE_MEMBERSHIP ),
+#endif
+#ifdef IP_BLOCK_SOURCE
     MAP_OPTION( IP_BLOCK_SOURCE ),
+#endif
+#ifdef IP_UNBLOCK_SOURCE
     MAP_OPTION( IP_UNBLOCK_SOURCE ),
+#endif
     MAP_OPTION( IP_OPTIONS ),
 #ifdef IP_HDRINCL
     MAP_OPTION( IP_HDRINCL ),
@@ -3457,7 +3465,9 @@
     int woptval;
     struct linger linger;
     struct timeval tval;
+#if MAC_OS_X_VERSION_MAX_ALLOWED > 1070
     struct ip_mreq_source mreq_source;
+#endif
 
     TRACE("(socket %04lx, %s, optval %s, optlen %d)\n", s,
           debugstr_sockopt(level, optname), debugstr_optval(optval, optlen),
@@ -3640,6 +3650,7 @@
         case WS_IP_DROP_SOURCE_MEMBERSHIP:
         case WS_IP_UNBLOCK_SOURCE:
         {
+#if MAC_OS_X_VERSION_MAX_ALLOWED > 1070
             WS_IP_MREQ_SOURCE* val = (void*)optval;
             mreq_source.imr_interface.s_addr = val->imr_interface.S_un.S_addr;
             mreq_source.imr_multiaddr.s_addr = val->imr_multiaddr.S_un.S_addr;
@@ -3649,6 +3660,7 @@
             optlen = sizeof(mreq_source);
 
             convert_sockopt(&level, &optname);
+#endif
             break;
         }
         case WS_IP_DROP_MEMBERSHIP:
