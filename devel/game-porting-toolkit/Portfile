# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   github 1.0
PortGroup                   muniversal 1.1

# Using custom mirror to avoid embedding huge patchfiles
github.setup                gcenx game-porting-toolkit 1.1 Game-Porting-Toolkit-

name                        game-porting-toolkit
set my_name                 wine
revision                    3
platforms                   {darwin >= 23}
license                     LGPL-2.1+
categories                  devel

supported_archs             x86_64
maintainers                 {@Gcenx gmail.com:gcenx83}
homepage                    https://developer.apple.com/games
dist_subdir                 ${my_name}
distname                    ${github.tag_prefix}${github.version}

description                 Game Porting Toolkit ${version}
long_description            Use the game porting toolkit to eliminate months of up-front work and \
                            evaluate how well your game could run on Mac before writing any code.

checksums \
    rmd160  6f48c677bc99bf6584fc4043855f050f8f0c9958 \
    sha256  8dc978cb2dae0af50d8f2c1b4db637c6fa8261ecc68369e3c5efcf8e84a011a8 \
    size    46782010

depends_build \
    port:bison \
    bin:flex:flex \
    port:gettext \
    port:llvm-cx \
    port:mingw-w64 \
    port:pkgconfig

depends_lib \
    port:freetype \
    port:gettext-runtime \
    path:lib/pkgconfig/gnutls.pc:gnutls \
    port:libpcap \
    port:libsdl2

depends_run \
    port:d3dmetal \
    port:mingw-w64-wine-gecko-2.47.2 \
    port:mingw-w64-wine-mono-7.4.1

patch.pre_args -p1

# Replace CXHACK-21217 with upstreams fix
patchfiles-append \
    0001-remove-cxhack-21217.diff

# Default to Win10 19043
patchfiles-append \
    0002-default-win10-19043.diff

# Update to wine-mono-7.4.1
patchfiles-append \
    0003-mscoree-update-wine-mono-to-7.4.1.diff

patchfiles-append \
    0004-ntdll-d3dmetal-env.diff

patchfiles-append \
    1001-remove-cross_compiling-check.diff

post-patch {
    # https://gitlab.winehq.org/wine/wine/-/commit/c7a97b5d5d56ef00a0061b75412c6e0e489fdc99
    reinplace -q "/PKG_CONFIG_PATH/d"       ${worksrcpath}/configure
    reinplace -q "/PKG_CONFIG_PATH/d"       ${worksrcpath}/configure.ac
    reinplace -q "s|;(cw)||g"               ${worksrcpath}/loader/wine.inf.in
}

configure.checks.implicit_function_declaration.whitelist-append \
    __clear_cache \
    fallocate \
    gethostbyaddr_r \
    gethostbyname_r \
    sched_setaffinity

# wine requires the program specified in INSTALL to create intermediate
# directories; /usr/bin/install doesn't.
# http://bugs.winehq.org/show_bug.cgi?id=35310
configure.install \
    ${worksrcpath}/tools/install-sh

# Install to libexec to not conflict with wine ports
configure.pre_args \
    --prefix=${prefix}/libexec/${name}

configure.pre_args.i386 \
    --with-wine64=${workpath}/${worksrcdir}-x86_64 \
    --enable-win32on64 \
    --disable-loader

configure.args \
    --enable-win64 \
    --disable-tests \
    --without-alsa \
    --without-capi \
    --with-coreaudio \
    --with-cups \
    --without-dbus \
    --without-fontconfig \
    --with-freetype \
    --with-gettext \
    --without-gettextpo \
    --without-gphoto \
    --with-gnutls \
    --without-gssapi \
    --without-gstreamer \
    --without-inotify \
    --without-krb5 \
    --with-mingw \
    --without-netapi \
    --without-openal \
    --with-opencl \
    --with-opengl \
    --without-oss \
    --with-pcap \
    --with-pthread \
    --without-pulse \
    --without-sane \
    --with-sdl \
    --without-udev \
    --with-unwind \
    --without-usb \
    --without-v4l2 \
    --without-vulkan \
    --without-x

configure.args-append \
    --disable-winedbg \
    --disable-winemenubuilder

# We also need to tell the linker to add Macports to the rpath stack.
configure.ldflags-append    -Wl,-rpath,${compiler.library_path} -Wl,-rpath,${prefix}/libexec/d3dmetal/external

# Xcode15 linker requires -ld_classic to enable legacy behaviours required to build wine
set clt150   [expr { ${xcodeversion} eq "none" && ${xcodecltversion} ne "none" && [vercmp ${xcodecltversion} >= "15.0"] } ]
set xcode150 [expr { ${xcodeversion} ne "none" && [vercmp ${xcodeversion} >= "15.0"] } ]
if { ${clt150} || ${xcode150} } {
    configure.ldflags-prepend   -Wl,-ld_classic
}

# Xcode15.3 default SDK causes the build to fail so fallback to a working SDK
set clt153   [expr { ${xcodeversion} eq "none" && ${xcodecltversion} ne "none" && [vercmp ${xcodecltversion} >= "15.3"] } ]
set xcode153 [expr { ${xcodeversion} ne "none" && [vercmp ${xcodeversion} >= "15.3"] } ]
if { ${clt153} || ${xcode153} } {
    configure.sdk_version       13
    if {${configure.sdkroot} eq ""} {
        depends_build-append    port:MacOSX13.sdk
        configure.sdkroot       ${prefix}/Developer/SDKs/MacOSX13.sdk
    }
}

# Use an older deployment target to avoid new dyld behaviors.
# The custom compiler is too old to accept "13.0", so we use "10.14".
macosx_deployment_target    10.14

variant gstreamer description {Build ${subport} with GStreamer, for multimedia support} {
    depends_lib-append  port:gstreamer1-gst-plugins-good port:gstreamer1-gst-plugins-bad \
                        port:gstreamer1-gst-plugins-ugly port:gstreamer1-gst-libav
    configure.args-delete           --without-gstreamer
    configure.args.i386-append      --without-gstreamer
    configure.args.x86_64-append    --with-gstreamer
}

default_variants            +gstreamer

triplet.add_build           cross
triplet.add_host            none

configure.ldflags-delete    -L${compiler.library_path}
configure.optflags          -O3
configure.env-append        CROSSCFLAGS=${configure.optflags}

# Common compiler flags for both Mach-O and PE binaries.
configure.cflags-append \
    -Wno-implicit-function-declaration \
    -Wno-format -Wno-deprecated-declarations \
    -Wno-incompatible-pointer-types

# Were only installing wine not the development files
destroot.target             install-lib

configure.cc                ${prefix}/libexec/llvm-cx/bin/clang
configure.cxx               ${prefix}/libexec/llvm-cx/bin/clang++
configure.cmd               ${worksrcpath}/configure
configure.compiler.add_deps no
compiler.limit_flags        yes
muniversal.arch_flag        no
muniversal.arch_compiler    yes

configure {
    set configure.dir ${worksrcpath}-x86_64
    portconfigure::configure_main

    configure.args.x86_64
    set configure.dir ${worksrcpath}-i386
    configure.args-delete --enable-win64
    configure.args ${configure.pre_args.i386} ${configure.args} ${configure.args.i386}
    portconfigure::configure_main
}

build {
    set build.dir ${worksrcpath}-x86_64
    portbuild::build_main

    set build.dir ${worksrcpath}-i386
    portbuild::build_main
}

destroot {
    set destroot.dir ${worksrcpath}-x86_64
    portdestroot::destroot_main

    set destroot.dir ${worksrcpath}-i386
    portdestroot::destroot_main
}

post-destroot {
    # Avoid downloading wine-gecko & wine-mono
    ln -sf ${prefix}/share/wine/gecko ${destroot}${prefix}/libexec/${name}/share/wine/gecko
    ln -sf ${prefix}/share/wine/mono ${destroot}${prefix}/libexec/${name}/share/wine/mono

    file copy ${filespath}/gameportingtoolkit           ${destroot}${prefix}/bin/gameportingtoolkit
    file copy ${filespath}/gameportingtoolkit-no-esync  ${destroot}${prefix}/bin/gameportingtoolkit-no-esync
    file copy ${filespath}/gameportingtoolkit-no-hud    ${destroot}${prefix}/bin/gameportingtoolkit-no-hud

    reinplace -q "s|@@PREFIX@@|${prefix}|g"             ${destroot}${prefix}/bin/gameportingtoolkit \
                                                        ${destroot}${prefix}/bin/gameportingtoolkit-no-esync \
                                                        ${destroot}${prefix}/bin/gameportingtoolkit-no-hud
}

platform darwin i386 {
    try {
        set is_rosetta2 [exec sysctl -in sysctl.proc_translated]
        if { ${is_rosetta2} != 1 } {
            supported_archs arm64
        }
    }
}

post-deactivate {
    if {![catch {set installed [lindex [registry_active mingw-w64-wine-gecko-2.47.2] 0]}]} {
        registry_deactivate_composite mingw-w64-wine-gecko-2.47.2 "" [list ports_nodepcheck 1]
    }
    if {![catch {set installed [lindex [registry_active mingw-w64-wine-mono-7.4.1] 0]}]} {
        registry_deactivate_composite mingw-w64-wine-mono-7.4.1 "" [list ports_nodepcheck 1]
    }
}
