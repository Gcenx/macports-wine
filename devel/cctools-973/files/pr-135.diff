From 94cc211cbca8285e336add1fc183173fe9bd403b Mon Sep 17 00:00:00 2001
From: Mike Hommey <mh@glandium.org>
Date: Thu, 6 Jul 2023 07:28:13 +0900
Subject: [PATCH] Avoid dead-stripping rust compiler_builtins atoms

---
 cctools/ld64/src/ld/Resolver.cpp | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/cctools/ld64/src/ld/Resolver.cpp b/cctools/ld64/src/ld/Resolver.cpp
index 3ee23097..e6b8d607 100644
--- a/cctools/ld64/src/ld/Resolver.cpp
+++ b/cctools/ld64/src/ld/Resolver.cpp
@@ -1192,9 +1192,10 @@ void Resolver::deadStripOptimize(bool force)
 			// unset liveness, so markLive() will recurse
 			(const_cast<ld::Atom*>(atom))->setLive(0);
 		}
-		// <rdar://problem/49468634> if doing LTO, mark all libclang_rt* mach-o atoms as live since the backend may suddenly codegen uses of them
+		// <rdar://problem/49468634> if doing LTO, mark all libclang_rt* mach-o atoms as live since the backend may suddenly codegen uses of them.
+		// Likewise with rust compiler_builtins atoms. They may come from a libcompiler_builtins-<hash>.a lib, or from a compiler_builtins-... member of a rust static library.
 		else if ( _haveLLVMObjs && !force && (atom->contentType() !=  ld::Atom::typeLTOtemporary) ) {
-			if ( isCompilerSupportLib(atom->safeFilePath()) ) {
+			if ( isCompilerSupportLib(atom->safeFilePath()) || strstr(atom->safeFilePath(), "compiler_builtins") != nullptr ) {
 				_deadStripRoots.insert(atom);
 			}
 		}
