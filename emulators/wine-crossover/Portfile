# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   compiler_blacklist_versions 1.0
PortGroup                   muniversal 1.1

# Keep the wine-stable, wine-devel and wine-crossover portfiles as similar as possible.

# Crossover-specific bug reports are accepted at info@codeweavers.com
name                        wine-crossover
conflicts                   wine-stable wine-stable-6.0.4 wine-stable-7.0.2 wine-devel wine-devel-6.8 wine-devel-7.22 wine-devel-8.21 wine-staging
set my_name                 wine
version                     23.7.1
revision                    0
platforms                   {darwin >= 19}
license                     LGPL-2.1+
categories                  emulators
supported_archs             x86_64
maintainers                 {@gcenx}
homepage                    https://www.codeweavers.com/crossover/source
distname                    crossover-sources-${version}
dist_subdir                 ${my_name}
set wine_distfile           ${distname}${extract.suffix}
set wine_version            8.0.1
worksrcdir                  sources/wine

description \
    A Windows API implementation (wine-${wine_version} \
    with CodeWeavers modifications for CrossOver)

long_description \
    Wine is a compatibility layer capable of running \
    Windows applications. \
    This version contains the CodeWeavers patches for \
    CrossOver. \
    Instead of simulating internal Windows logic like \
    a virtual machine or emulator, Wine translates \
    Windows API calls into POSIX calls on-the-fly, \
    eliminating the performance and memory penalties \
    of other methods and allowing you to cleanly \
    integrate Windows applications into your desktop.

master_sites \
    https://media.codeweavers.com/pub/crossover/source/:winesource

distfiles \
    ${wine_distfile}:winesource

checksums \
    ${wine_distfile} \
    rmd160  ae47db1278d73024654192fd6ac35e7f8b8809f3 \
    sha256  aa85487b0c80c97a0ddb8a8b9aaab1a720772af275af92d9997dded2bd15bf15 \
    size    134921040

depends_build \
    port:bison \
    bin:flex:flex \
    port:gettext \
    port:mingw-w64 \
    port:pkgconfig

depends_lib \
    port:freetype \
    port:gettext-runtime \
    path:lib/pkgconfig/gnutls.pc:gnutls \
    path:lib/libMoltenVK.dylib:MoltenVK \
    port:libpcap \
    port:libsdl2 \

depends_run \
    port:mingw-w64-wine-gecko-2.47.3 \
    port:mingw-w64-wine-mono-7.4.1

patch.pre_args -p1

# Patch provided by Josh Dubois, CrossOver product manager, CodeWeavers
patchfiles-append \
    0001-distversion.diff

# Remove cxmenu functions
patchfiles-append \
    0002-winemenubuilder-remove-cxmenu.diff

post-patch {
    # https://gitlab.winehq.org/wine/wine/-/commit/c7a97b5d5d56ef00a0061b75412c6e0e489fdc99
    reinplace -q "/PKG_CONFIG_LIBDIR/d"     ${worksrcpath}/configure
    reinplace -q "/PKG_CONFIG_LIBDIR/d"     ${worksrcpath}/configure.ac
    reinplace -q "s|;(cw)||g"               ${worksrcpath}/loader/wine.inf.in
}

configure.checks.implicit_function_declaration.whitelist-append \
    __clear_cache \
    fallocate \
    gethostbyaddr_r \
    gethostbyname_r \
    sched_setaffinity

# wine requires the program specified in INSTALL to create intermediate
# directories; /usr/bin/install doesn't.
# http://bugs.winehq.org/show_bug.cgi?id=35310
configure.install \
    ${worksrcpath}/tools/install-sh

configure.pre_args.x86_64 \
    --enable-win64 \
    --enable-archs=i386,x86_64

configure.args \
    --disable-tests \
    --without-alsa \
    --without-capi \
    --with-coreaudio \
    --with-cups \
    --without-dbus \
    --without-fontconfig \
    --with-freetype \
    --with-gettext \
    --without-gettextpo \
    --without-gphoto \
    --with-gnutls \
    --without-gssapi \
    --without-gstreamer \
    --without-inotify \
    --without-krb5 \
    --with-mingw \
    --without-netapi \
    --with-opencl \
    --with-opengl \
    --without-oss \
    --with-pcap \
    --with-pthread \
    --without-pulse \
    --without-sane \
    --with-sdl \
    --without-udev \
    --with-unwind \
    --without-usb \
    --without-v4l2 \
    --with-vulkan \
    --without-x

configure.env.x86_64        ac_cv_lib_soname_vulkan=

# Standard dlopen() is used so wine(64) no longer finds dylibs, since wine-5.6
# https://bugs.winehq.org/show_bug.cgi?id=49199
configure.ldflags           -Wl,-rpath,${compiler.library_path}

# Xcode15 linker requires -ld_classic to enable legacy behaviours required to build wine
set xcode_ok [expr { ${xcodeversion} ne "none" && [vercmp ${xcodeversion} >= "15.0"] } ]
set clt_ok   [expr { ${xcodeversion} eq "none" && ${xcodecltversion} ne "none" && [vercmp ${xcodecltversion} >= "15.0"] } ]
if { ${xcode_ok} || ${clt_ok} } {
    configure.ldflags-prepend   -Wl,-ld_classic
}

# Use an older deployment target to avoid new dyld behaviors.
macosx_deployment_target 10.14

# wine requires clang >= 3.8
# FSF GCC cannot compile code using Apple's "blocks" language extensions
compiler.blacklist-append   {*gcc*} {clang < 800} {macports-clang-3.*}

variant gphoto description {Build ${subport} with support for digital cameras} {
    depends_lib-append      port:libgphoto2
    configure.args-replace  --without-gphoto --with-gphoto
}

variant gstreamer description {Build ${subport} with GStreamer, for multimedia support} {
    depends_lib-append      port:gstreamer1-gst-plugins-good port:gstreamer1-gst-plugins-bad port:gstreamer1-gst-plugins-ugly port:gstreamer1-gst-libav
    configure.args-replace  --without-gstreamer --with-gstreamer
}

default_variants            +gstreamer

triplet.add_build           cross
triplet.add_host            none

# macports-base injects a number of flags that now propagate to mingw-gcc this causes the build to fail since, wine-7.21
# https://gitlab.winehq.org/wine/wine/-/commit/b1f59bc679a8c2dea18a6789a5b9b1a1ae825129
compiler.limit_flags        yes
muniversal.arch_flag        no
muniversal.arch_compiler    yes
configure.ldflags-delete    -L${compiler.library_path}
configure.optflags          -g -O2
configure.env-append        i386_CFLAGS=${configure.optflags}
configure.env-append        x86_64_CFLAGS=${configure.optflags}

# Reduce compilation warnings
configure.cflags-append     -Wno-deprecated-declarations

# Were only installing wine not the development files
destroot.target             install-lib

post-destroot {
    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} \
        ANNOUNCE \
        AUTHORS \
        COPYING.LIB \
        LICENSE \
        README \
        README.esync \
        ${destroot}${docdir}

    # CX23 uses upstreams experimental wow64 system so uses wine for everything
    # copy wine(-preloader) to wine64(-preloader) for consistancy and winetricks compatability
    copy ${destroot}${prefix}/bin/wine ${destroot}${prefix}/bin/wine64
    copy ${destroot}${prefix}/bin/wine-preloader ${destroot}${prefix}/bin/wine64-preloader
}

platform darwin arm {
    configure.pre_args.x86_64-prepend [muniversal::get_triplets x86_64]
}

post-deactivate {
    if {![catch {set installed [lindex [registry_active mingw-w64-wine-gecko-2.47.3] 0]}]} {
        registry_deactivate_composite mingw-w64-wine-gecko-2.47.3 "" [list ports_nodepcheck 1]
    }
    if {![catch {set installed [lindex [registry_active mingw-w64-wine-mono-7.4.1] 0]}]} {
        registry_deactivate_composite mingw-w64-wine-mono-7.4.1 "" [list ports_nodepcheck 1]
    }
}

livecheck.type              regex
livecheck.url               https://media.codeweavers.com/pub/crossover/source/
livecheck.regex             crossover-sources-(\[0-9.\]+)\\.tar.gz
