# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   compiler_blacklist_versions 1.0
PortGroup                   muniversal 1.1

# Keep the wine-stable, wine-devel and wine-crossover portfiles as similar as possible.

name                        wine-devel
conflicts                   wine-stable wine-staging wine-crossover
set my_name                 wine
version                     9.8
revision                    0
platforms                   {darwin >= 19.4}
set branch                  [lindex [split ${version} .] 0].x
license                     LGPL-2.1+
categories                  emulators
supported_archs             x86_64
maintainers                 {@gcenx}
homepage                    https://www.winehq.org
distname                    ${my_name}-${version}
dist_subdir                 ${my_name}
set wine_distfile           ${distname}${extract.suffix}
worksrcdir                  wine-${distname}

description \
    A Windows API implementation

long_description \
    Wine is a compatibility layer capable of running \
    Windows applications. \
    Instead of simulating internal Windows logic like \
    a virtual machine or emulator, Wine translates \
    Windows API calls into POSIX calls on-the-fly, \
    eliminating the performance and memory penalties \
    of other methods and allowing you to cleanly \
    integrate Windows applications into your desktop.

master_sites \
    https://github.com/wine-mirror/wine/archive/:winesource

distfiles \
    ${wine_distfile}:winesource

checksums \
    ${wine_distfile} \
    rmd160  d86c4ee374dd50378ac9ac10a40a202ad0228805 \
    sha256  357fc7d3fa501395dcc3dfdd810737ed803018351f00ca4fc4f79a4245191020 \
    size    49392258

depends_build \
    port:bison \
    bin:flex:flex \
    port:gettext \
    port:mingw-w64 \
    port:pkgconfig

depends_lib \
    port:freetype \
    port:gettext-runtime \
    path:lib/pkgconfig/gnutls.pc:gnutls \
    port:libinotify \
    path:lib/libMoltenVK.dylib:MoltenVK \
    port:libpcap \
    port:libsdl2

depends_run \
    port:mingw-w64-wine-gecko-2.47.4 \
    port:mingw-w64-wine-mono-9.1.0

patch.pre_args -p1

# https://bugs.winehq.org/show_bug.cgi?id=34166#c103
patchfiles-append \
    0001-winemac.drv-No-Flicker-patch.diff

post-patch {
    # https://gitlab.winehq.org/wine/wine/-/commit/c7a97b5d5d56ef00a0061b75412c6e0e489fdc99
    reinplace -q "/PKG_CONFIG_LIBDIR/d"     ${worksrcpath}/configure
    reinplace -q "/PKG_CONFIG_LIBDIR/d"     ${worksrcpath}/configure.ac
}

configure.checks.implicit_function_declaration.whitelist-append \
    __clear_cache \
    fallocate \
    gethostbyaddr_r \
    gethostbyname_r \
    sched_setaffinity

# wine requires the program specified in INSTALL to create intermediate
# directories; /usr/bin/install doesn't.
# http://bugs.winehq.org/show_bug.cgi?id=35310
configure.install \
    ${worksrcpath}/tools/install-sh

configure.args \
    --enable-archs=i386,x86_64 \
    --enable-win64 \
    --disable-tests \
    --without-alsa \
    --without-capi \
    --with-coreaudio \
    --with-cups \
    --without-dbus \
    --without-fontconfig \
    --with-freetype \
    --with-gettext \
    --without-gettextpo \
    --without-gphoto \
    --with-gnutls \
    --without-gssapi \
    --without-gstreamer \
    --with-inotify \
    --without-krb5 \
    --with-mingw \
    --without-netapi \
    --with-opencl \
    --with-opengl \
    --without-oss \
    --with-pcap \
    --with-pcsclite \
    --with-pthread \
    --without-pulse \
    --without-sane \
    --with-sdl \
    --without-udev \
    --with-unwind \
    --without-usb \
    --without-v4l2 \
    --with-vulkan \
    --without-wayland \
    --without-x

configure.env-append    ac_cv_lib_soname_vulkan=

# Standard dlopen() is used so wine(64) no longer finds dylibs, since wine-5.6
# https://bugs.winehq.org/show_bug.cgi?id=49199
configure.ldflags-append    -Wl,-rpath,${compiler.library_path}

# wine requires clang >= 3.8
# FSF GCC cannot compile code using Apple's "blocks" language extensions
compiler.blacklist-append   {*gcc*} {clang < 800} {macports-clang-3.*}

subport wine-staging {
    name \
        wine-staging

    conflicts \
        wine-stable wine-devel wine-crossover

    set staging_version \
        ${version}
    set wine_staging_distfile \
        v${staging_version}${extract.suffix}

    master_sites-append \
        https://github.com/wine-staging/wine-staging/archive/:stagingsource

    distfiles-append \
        ${wine_staging_distfile}:stagingsource

    checksums-append \
        ${wine_staging_distfile} \
        rmd160  87b0cb350666649bc4dc49970048fcfe5596f03a \
        sha256  eba01cd743fd317319053e0a58be562dd1d10b67748abb005196066e83610c9e \
        size    9580231

    depends_extract-append \
        port:autoconf

    # Running "patchinstall.py" before 'patchfiles' get inherited from wine-devel
    # "eventfd_synchronization" doesn't work on macOS (CX version does)'
    # "winemac.drv-no-flicker-patch" gets inherited from wine-devel
    post-extract {
        system -W ${worksrcpath} \
            "${workpath}/wine-staging-${staging_version}/staging/patchinstall.py --all -W eventfd_synchronization -W winemac.drv-no-flicker-patch"
    }
}

# This makes destroot take an extreme amout of time
variant dev description {Install ${subport} development environment} {
    build.target            all
    destroot.target-append  install-dev
}

variant gphoto description {Build ${subport} with support for digital cameras} {
    depends_lib-append      port:libgphoto2
    configure.args-replace  --without-gphoto --with-gphoto
}

variant gstreamer description {Build ${subport} with GStreamer, for multimedia support} {
    depends_lib-append      port:gstreamer1-gst-plugins-good port:gstreamer1-gst-libav
    configure.args-replace  --without-gstreamer --with-gstreamer
}

variant kerberos description {Build ${subport} with Kerberos, for network authentication protocol support} {
    depends_lib-append      port:kerberos5
    configure.args-replace  --without-krb5 --with-krb5
}

variant quartz {}

default_variants            +gstreamer +quartz

triplet.add_build           cross
triplet.add_host            none

# macports-base injects a number of flags that now propagate to mingw-gcc this causes the build to fail since, wine-7.21
# https://gitlab.winehq.org/wine/wine/-/commit/b1f59bc679a8c2dea18a6789a5b9b1a1ae825129
compiler.limit_flags        yes
muniversal.arch_flag        no
muniversal.arch_compiler    yes
configure.ldflags-delete    -L${compiler.library_path}
configure.optflags          -g -O2
configure.env-append        i386_CFLAGS=${configure.optflags}
configure.env-append        x86_64_CFLAGS=${configure.optflags}

# Reduce compilation warnings
configure.cflags-append \
    -Wno-deprecated-declarations \
    -Wno-unused-command-line-argument

# Were only installing wine not the development files
destroot.target             install-lib

post-destroot {
    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} \
        ANNOUNCE.md \
        AUTHORS \
        COPYING.LIB \
        LICENSE \
        README.md \
        ${destroot}${docdir}
}

livecheck.url               ${homepage}
livecheck.type              regex
livecheck.regex             {"/announce/([^"]+)"}
