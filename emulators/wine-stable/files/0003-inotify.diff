From c97306071c443bdfd426013e36418ae2f98840e2 Mon Sep 17 00:00:00 2001
From: Marc-Aurel Zent <marc_aurel@me.com>
Date: Mon, 18 Sep 2023 22:56:28 +0200
Subject: [PATCH] server: fix inotify on non linux systems

---
 server/change.c | 29 ++++++++++++++++++++++-------
 1 file changed, 22 insertions(+), 7 deletions(-)

diff --git a/server/change.c b/server/change.c
index dd9e0bfee..04b65de3e 100644
--- a/server/change.c
+++ b/server/change.c
@@ -722,6 +722,11 @@ static unsigned int filter_from_inode( struct inode *inode, int is_parent )
     return filter;
 }
 
+static int get_path_from_fd(int fd, char *path)
+{
+    return fcntl(fd, F_GETPATH, path);
+}
+
 static char *inode_get_path( struct inode *inode, int sz )
 {
     struct list *head;
@@ -735,9 +740,15 @@ static char *inode_get_path( struct inode *inode, int sz )
     if (head)
     {
         int unix_fd = get_unix_fd( LIST_ENTRY( head, struct dir, in_entry )->fd );
-        path = malloc ( 32 + sz );
+        path = malloc(PATH_MAX);
         if (path)
-            sprintf( path, "/proc/self/fd/%u/", unix_fd );
+        {
+            if (get_path_from_fd(unix_fd, path) != 0)
+            {
+                free(path);
+                return NULL;
+            }
+        }
         return path;
     }
 
@@ -965,7 +976,7 @@ static int inotify_adjust_changes( struct dir *dir )
     unsigned int filter;
     struct inode *inode;
     struct stat st;
-    char path[32];
+    char path[PATH_MAX];
     int wd, unix_fd;
 
     if (!inotify_fd)
@@ -991,7 +1002,8 @@ static int inotify_adjust_changes( struct dir *dir )
 
     filter = filter_from_inode( inode, 0 );
 
-    sprintf( path, "/proc/self/fd/%u", unix_fd );
+    if (get_path_from_fd(unix_fd, path) != 0)
+        return 0;
     wd = inotify_add_dir( path, filter );
     if (wd == -1) return 0;
 
@@ -1043,7 +1055,7 @@ static int dir_add_to_existing_notify( struct dir *dir )
     struct inode *inode, *parent;
     unsigned int filter = 0;
     struct stat st, st_new;
-    char link[35], *name;
+    char link[PATH_MAX], *name;
     int wd, unix_fd;
 
     if (!inotify_fd)
@@ -1059,7 +1071,9 @@ static int dir_add_to_existing_notify( struct dir *dir )
         return 0;
 
     /* lookup the parent */
-    sprintf( link, "/proc/self/fd/%u/..", unix_fd );
+    if (get_path_from_fd(unix_fd, link) != 0)
+        return 0;
+    strlcat(link, "/..", sizeof(link));
     if (-1 == stat( link, &st ))
         return 0;
 
@@ -1080,7 +1094,8 @@ static int dir_add_to_existing_notify( struct dir *dir )
     if (!filter)
         return 0;
 
-    sprintf( link, "/proc/self/fd/%u", unix_fd );
+    if (get_path_from_fd(unix_fd, link) != 0)
+        return 0;
     name = get_basename( link );
     if (!name)
         return 0;
