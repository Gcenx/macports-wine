# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   muniversal 1.1
PortGroup                   compiler_blacklist_versions 1.0
PortGroup                   active_variants 1.1
PortGroup                   legacysupport 1.1

# ntdll requires fstatat, since wine-5.9
# https://github.com/wine-staging/wine-staging/commit/762c0e704003f802a5f3470aedd80799cb18c9ef
legacysupport.newest_darwin_requires_legacy 13

# Must be statically linked or -preloader breaks 
legacysupport.use_static yes

name                        wine-stable
conflicts                   wine-devel wine-crossover
set my_name                 wine
version                     6.0.4
revision                    0
platforms                   {darwin >= 10}
set branch                  [lindex [split ${version} .] 0].0
license                     LGPL-2.1+
categories                  emulators

supported_archs             i386 x86_64
maintainers                 {@gcenx}
homepage                    https://www.winehq.org
distname                    ${my_name}-${version}
dist_subdir                 ${my_name}
set wine_distfile           ${distname}${extract.suffix}
worksrcdir                  wine-${distname}

description \
    A Windows API implementation

long_description \
    Wine is a compatibility layer capable of running \
    Windows applications. \
    Instead of simulating internal Windows logic like \
    a virtual machine or emulator, Wine translates \
    Windows API calls into POSIX calls on-the-fly, \
    eliminating the performance and memory penalties \
    of other methods and allowing you to cleanly \
    integrate Windows applications into your desktop.

depends_fetch-append        port:curl
depends_skip_archcheck-append curl
fetch {
    # Manually download the file(s) if they don't exist
    if {![file exists ${distpath}/${wine_distfile} ]} {
        system -W /bin "${prefix}/bin/curl -Lo ${distpath}/${wine_distfile} https://github.com/wine-mirror/wine/archive/${wine_distfile}"
    }
}

distfiles \
    ${wine_distfile}:winesource

checksums \
    ${wine_distfile} \
    rmd160  c136de5fe6a7e3b5620ecd0afb272d165c1d9ec6 \
    sha256  ca50376e3f7200493214daa5f7fd1145bfc9dd085c4814e4d502d4723e7b52a6 \
    size    40532584

depends_build \
    port:bison \
    port:cctools \
    port:flex \
    port:gettext \
    port:ld64 \
    port:mingw-w64 \
    port:pkgconfig

depends_lib \
    port:freetype \
    port:FAudio \
    path:lib/pkgconfig/gnutls.pc:gnutls \
    port:gstreamer1 \
    port:gstreamer1-gst-plugins-base \
    port:gstreamer1-gst-plugins-good \
    port:gstreamer1-gst-libav \
    path:include/turbojpeg.h:libjpeg-turbo \
    port:lcms2 \
    port:libiconv \
    port:libpcap \
    port:libpng \
    port:libunwind \
    port:libxml2 \
    port:libxslt \
    port:mpg123 \
    port:openal-soft \
    port:openldap \
    port:tiff

depends_run \
    path:share/curl/curl-ca-bundle.crt:curl-ca-bundle \
    port:mingw-w64-wine-gecko \
    port:mingw-w64-wine-mono-5.1.1

patch.pre_args \
    -p1

# https://bugs.winehq.org/show_bug.cgi?id=34166#c103
patchfiles-append \
    0001-winemac.drv-No-Flicker-patch.diff

# Older versions of macOS have expired certs, this allows wine to use curl-ca-bundle.crt
patchfiles-append \
    0002-crypt32-expand-cert-search-paths.diff

post-patch {
    reinplace "s|@@PREFIX@@|${prefix}|g" ${worksrcpath}/dlls/crypt32/unixlib.c
}

configure.checks.implicit_function_declaration.whitelist-append \
    __clear_cache \
    fallocate \
    gethostbyaddr_r \
    gethostbyname_r \
    sched_setaffinity

# Wine requires the program specified in INSTALL to create intermediate
# directories; /usr/bin/install doesn't.
# https://bugs.winehq.org/show_bug.cgi?id=35310
configure.install \
    ${worksrcpath}/tools/install-sh

configure.args \
    --without-alsa \
    --without-capi \
    --with-cms \
    --with-coreaudio \
    --with-cups \
    --without-dbus \
    --with-faudio \
    --without-fontconfig \
    --with-freetype \
    --with-gettext \
    --without-gettextpo \
    --without-gphoto \
    --with-gnutls \
    --without-gsm \
    --without-gssapi \
    --with-gstreamer \
    --without-hal \
    --without-inotify \
    --with-jpeg \
    --without-krb5 \
    --with-ldap \
    --with-mingw \
    --with-mpg123 \
    --without-netapi \
    --with-openal \
    --with-opencl \
    --with-opengl \
    --without-oss \
    --with-pcap \
    --with-png \
    --with-pthread \
    --without-pulse \
    --without-quicktime \
    --without-sane \
    --with-sdl \
    --with-tiff \
    --without-udev \
    --with-unwind \
    --without-usb \
    --without-v4l2 \
    --without-vkd3d \
    --with-xml \
    --with-xslt \
    --without-x

# wine has a native display driver, since wine-1.5.26
variant x11 {
    depends_lib-append \
        port:libGLU \
        port:mesa \
        port:xorg-libX11 \
        port:xorg-libXcomposite \
        port:xorg-libXcursor \
        port:xorg-libXext \
        port:xorg-libXi \
        port:xorg-libXinerama \
        port:xorg-libXrandr \
        port:xorg-libXxf86vm \
        port:xorg-libsm \
        port:xorg-xorgproto \
        port:xrender

    configure.args-delete \
        --without-x

    configure.args-append \
        --with-osmesa \
        --with-xcomposite \
        --with-xcursor \
        --with-xfixes \
        --with-xinerama \
        --with-xinput \
        --with-xinput2 \
        --with-xrandr \
        --with-xrender \
        --with-xshape \
        --with-xshm \
        --with-xxf86vm \
        --with-x \
        --x-include=${prefix}/include \
        --x-lib=${prefix}/lib
}

# Workaround weirdness with FAUDIO_CFLAGS & GSTREAMER_CFLAGS not always getting set from pkgconfig
configure.args-append \
    FAUDIO_CFLAGS="-I${prefix}/include/Faudio" \
    GSTREAMER_CFLAGS="-I${prefix}/include/gstreamer-1.0 -I${prefix}/include/glib-2.0 -I${prefix}/lib/glib-2.0/include -I${prefix}/include/orc-0.4"

# Standard dlopen() is used so wine(64) no longer finds dylibs, since wine-5.6
# https://bugs.winehq.org/show_bug.cgi?id=49199
configure.ldflags-append \
    -Wl,-rpath,${prefix}/lib

configure.args.i386-append \
    --without-vulkan

configure.args.x86_64-append    "--enable-win64 --libdir=${prefix}/lib"
build.args.x86_64-append        "dlldir=${prefix}/lib/wine64"
destroot.args.x86_64-append     "dlldir=${prefix}/lib/wine64"

if {[llength ${supported_archs}] > 1} {
    default_variants +universal
}

if {${universal_possible} && [variant_isset universal]} {
    configure.args.i386-append  --with-wine64=${workpath}/${worksrcdir}-x86_64
} elseif {${universal_possible} && ![variant_isset universal]} {
    supported_archs             i386
}

# Avoid weird linker errors with Xcode 10 and later
if {${os.major} > 18} {
    macosx_deployment_target    10.14
}

# Vulkan is supported on macOS through MoltenVK, since wine-3.13
if {${os.major} >= 15} {
    depends_lib-append \
        path:lib/libMoltenVK.dylib:MoltenVK

    depends_skip_archcheck-append \
        MoltenVK

    configure.args.x86_64-append \
        --with-vulkan \
        ac_cv_lib_soname_MoltenVK=libMoltenVK.dylib \
        ac_cv_lib_soname_vulkan=
}

if {${os.major} == 10} {
    # Need to try tracking down when these two reamaining breakages happened
    # https://trac.macports.org/ticket/61721
    patchfiles-append           1001-SnowLeopard-Fixes.diff

    # winemac.drv: Wake up the display on user input., since wine-3.12
    # https://gitlab.winehq.org/wine/wine/-/commit/60edba563bbf95d15b7691fc9facbd97fce3f7b6
    patchfiles-append           1002-Fix-winemac.drv-on-10.6.diff

    # libmacho is required for getsegmentdata(3), since wine-3.14
    # https://gitlab.winehq.org/wine/wine/-/commit/bdca749f7ba4f434ac326481cf4fe0a059887f5d
    depends_build-append        port:libmacho
    configure.ldflags-append    ${prefix}/lib/libmacho.a

    # ld64 needs to support -no_new_main for preloader, since wine-4.0-rc1
    # https://gitlab.winehq.org/wine/wine/-/commit/a0ab2a7b0c9c28588714372cf1b19a06dd706b26
    require_active_variants     port:ld64 ld64_274

    # Used to fix a build issue with Xcode 10, since wine-4.0-rc2
    # https://gitlab.winehq.org/wine/wine/-/commit/0185ee5d99e8dca2c69d61ba0c0e00256beaf1b5
    pre-configure {
        reinplace s|-mmacosx-version-min=10.7|-mmacosx-version-min=10.6|g ${worksrcpath}/configure
    }

    # Features don't exist in IOKit until 10.7, since wine-4.21
    # https://gitlab.winehq.org/wine/wine/-/commit/eea87600d21adcd910f72f1cdaf698451884f582
    patchfiles-append           1003-Revert-eea87600d21adcd910f72f1cdaf698451884f582.diff

    #### One or both of these need to be reverted or wine-6.0.4 won't launch some error on user32 ####
    # user32: Redraw children when the combo box is dropped down, since wine-6.22 (cherry picked)
    # https://gitlab.winehq.org/wine/wine/-/commit/ad7c5e9ced855950228ea3f73bff0624829b66d7
    patchfiles-append           1004-Revert-ad7c5e9ced855950228ea3f73bff0624829b66d7.diff

    # user32: Set WM_CONTEXTMENU's wparam to the child window's handle, since wine-7.0-rc5 (cherry picked)
    # https://gitlab.winehq.org/wine/wine/-/commit/149284628def87f7e1ca70a1f8c7858d68cea346
    patchfiles-append           1005-Revert-149284628def87f7e1ca70a1f8c7858d68cea346.diff
    #### One or both of those need to be reverted or wine-6.0.4 won't launch some error on user32 ####

    # Using the 10.7 SDK to avoid even more reverts
    configure.sdk_version   10.7
    if {${configure.sdkroot} eq ""} {
        pre-fetch {
            error "Building ${name} @${version} on Mac OS X 10.6 requires the MacOSX10.7.sdk to be present in ${developer_dir}/SDKs/"
        }
    }
}

# wine requires clang >= 3.8
# FSF GCC cannot compile code using Apple's "blocks" language extensions
compiler.blacklist-append   {*gcc*} {clang < 800} {macports-clang-3.*}
compiler.fallback-append    macports-clang-5.0

variant usb description {Build ${name} with USB support} {
    depends_lib-append port:libusb
    configure.args-delete --without-usb
    configure.args-append --with-usb
}

destroot.target install-lib

post-destroot {
    # Add custom tool for easy launching explorer
    xinstall ${worksrcpath}/tools/wineapploader.in ${destroot}${prefix}/bin/explorer

    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} \
        ANNOUNCE \
        AUTHORS \
        COPYING.LIB \
        LICENSE \
        README \
        ${destroot}${docdir}
}

if {${universal_possible} && [variant_isset universal]} {
    notes-append "
        \n
        Wine supports both 32-bit and 64-bit now. It is compatible with your\
        existing 32-bit wine prefix, but it will now default to 64-bit when you\
        create a new wine prefix. The architecture can be selected using the\
        WINEARCH environment variable which can be set to either \"win32\" or\
        \"win64\".

        To create a new pure 32-bit prefix, you can run:
            \$ WINEARCH=win32 WINEPREFIX=~/.wine32 winecfg

        See the Wine FAQ for details: https://wiki.winehq.org/FAQ#Wineprefixes
    "
}

post-deactivate {
     # When this port is deactivated, mingw-w64-wine-gecko should also be.
     if {![catch {set installed [lindex [registry_active mingw-w64-wine-gecko] 0]}]} {
         registry_deactivate_composite mingw-w64-wine-gecko "" [list ports_nodepcheck 1]
     }
     # When this port is deactivated, mingw-w64-wine-mono-5.1.1 should also be.
     if {![catch {set installed [lindex [registry_active mingw-w64-wine-mono-5.1.1] 0]}]} {
         registry_deactivate_composite mingw-w64-wine-mono-5.1.1 "" [list ports_nodepcheck 1]
     }
 }

livecheck.type              none
